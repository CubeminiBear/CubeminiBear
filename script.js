document.addEventListener('DOMContentLoaded', () => {
    const gameBoard = document.getElementById('game-board');
    const pairsFoundElement = document.getElementById('pairs-found');
    const messageModal = document.getElementById('message-modal');
    const winModal = document.getElementById('win-modal');
    const modalTitle = document.getElementById('modal-title');
    const modalMessage = document.getElementById('modal-message');
    const modalClose = document.getElementById('modal-close');
    const winClose = document.getElementById('win-close');

    // –ï–≥–∏–ø–µ—Ç—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã (—ç–º–æ–¥–∑–∏ –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã)
    const egyptianSymbols = [
        'ìÇÄ', 'ìÜ£', 'ìãπ', 'ìÉí',
        'ìäπ', 'ìç∂', 'ìÅõ', 'ìÜÑ'
    ];

    // –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—ã –∫–∞—Ä—Ç–æ—á–µ–∫
    let cards = [...egyptianSymbols, ...egyptianSymbols];
    let flippedCards = [];
    let matchedPairs = 0;
    let canFlip = true;

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    function shuffleCards() {
        for (let i = cards.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [cards[i], cards[j]] = [cards[j], cards[i]];
        }
    }

    // –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
    function createGameBoard() {
        gameBoard.innerHTML = '';
        shuffleCards();
        
        cards.forEach((symbol, index) => {
            const card = document.createElement('div');
            card.className = 'card';
            card.dataset.symbol = symbol;
            card.dataset.index = index;
            
            card.innerHTML = `
                <div class="card-front"></div>
                <div class="card-back">${symbol}</div>
            `;
            
            card.addEventListener('click', flipCard);
            gameBoard.appendChild(card);
        });
    }

    // –ü–µ—Ä–µ–≤–æ—Ä–æ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏
    function flipCard() {
        if (!canFlip) return;
        if (this.classList.contains('flipped') || this.classList.contains('matched')) return;
        if (flippedCards.length >= 2) return;

        this.classList.add('flipped');
        flippedCards.push(this);

        if (flippedCards.length === 2) {
            canFlip = false;
            setTimeout(checkMatch, 600);
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    function checkMatch() {
        const [card1, card2] = flippedCards;
        const isMatch = card1.dataset.symbol === card2.dataset.symbol;

        if (isMatch) {
            handleMatch(card1, card2);
        } else {
            handleMismatch(card1, card2);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    function handleMatch(card1, card2) {
        card1.classList.add('matched');
        card2.classList.add('matched');
        
        matchedPairs++;
        pairsFoundElement.textContent = matchedPairs;
        
        showMessage('–í–µ—Ä–Ω–æ!', '–í—ã –Ω–∞—à–ª–∏ –ø–∞—Ä–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã!');
        
        flippedCards = [];
        canFlip = true;

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–µ–¥—ã
        if (matchedPairs === egyptianSymbols.length) {
            setTimeout(showWinMessage, 800);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    function handleMismatch(card1, card2) {
        showMessage('–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞', '–ò—â–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ!');
        
        setTimeout(() => {
            card1.classList.remove('flipped');
            card2.classList.remove('flipped');
            flippedCards = [];
            canFlip = true;
        }, 1000);
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
    function showMessage(title, message) {
        modalTitle.textContent = title;
        modalMessage.textContent = message;
        messageModal.style.display = 'block';
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–µ
    function showWinMessage() {
        winModal.style.display = 'block';
    }

    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modalClose.addEventListener('click', () => {
        messageModal.style.display = 'none';
    });

    // –ù–æ–≤–∞—è –∏–≥—Ä–∞
    winClose.addEventListener('click', () => {
        winModal.style.display = 'none';
        resetGame();
    });

    // –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    window.addEventListener('click', (event) => {
        if (event.target === messageModal) {
            messageModal.style.display = 'none';
        }
        if (event.target === winModal) {
            winModal.style.display = 'none';
            resetGame();
        }
    });

    // –°–±—Ä–æ—Å –∏–≥—Ä—ã
    function resetGame() {
        matchedPairs = 0;
        pairsFoundElement.textContent = '0';
        flippedCards = [];
        canFlip = true;
        createGameBoard();
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
    createGameBoard();
});
